# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc c4873855422432ae63d07f5220f8c2de16538293490515e6dcd0481cd61d8ee2 # shrinks to patterns = [PortGraph { nodes: {NodeIndex(0): Node { inputs: [PortIndex(0)], outputs: [PortIndex(1)] }}, ports: {PortIndex(0): Port { node: NodeIndex(0), direction: Incoming, link: PortIndex(1) }, PortIndex(1): Port { node: NodeIndex(0), direction: Outgoing, link: PortIndex(0) }} }, PortGraph { nodes: {NodeIndex(0): Node { inputs: [], outputs: [PortIndex(0), PortIndex(1)] }, NodeIndex(1): Node { inputs: [PortIndex(2), PortIndex(3)], outputs: [] }}, ports: {PortIndex(0): Port { node: NodeIndex(0), direction: Outgoing }, PortIndex(1): Port { node: NodeIndex(0), direction: Outgoing, link: PortIndex(3) }, PortIndex(2): Port { node: NodeIndex(1), direction: Incoming }, PortIndex(3): Port { node: NodeIndex(1), direction: Incoming, link: PortIndex(1) }} }, PortGraph { nodes: {NodeIndex(0): Node { inputs: [PortIndex(0), PortIndex(1)], outputs: [] }}, ports: {PortIndex(0): Port { node: NodeIndex(0), direction: Incoming }, PortIndex(1): Port { node: NodeIndex(0), direction: Incoming }} }, PortGraph { nodes: {NodeIndex(0): Node { inputs: [], outputs: [PortIndex(0), PortIndex(1)] }}, ports: {PortIndex(0): Port { node: NodeIndex(0), direction: Outgoing }, PortIndex(1): Port { node: NodeIndex(0), direction: Outgoing }} }], g = PortGraph { nodes: {NodeIndex(0): Node { inputs: [], outputs: [] }, NodeIndex(1): Node { inputs: [], outputs: [] }, NodeIndex(2): Node { inputs: [], outputs: [PortIndex(0)] }, NodeIndex(3): Node { inputs: [], outputs: [] }, NodeIndex(4): Node { inputs: [PortIndex(1)], outputs: [PortIndex(2)] }, NodeIndex(5): Node { inputs: [PortIndex(3), PortIndex(4)], outputs: [] }, NodeIndex(6): Node { inputs: [PortIndex(5), PortIndex(6)], outputs: [PortIndex(7), PortIndex(8)] }, NodeIndex(7): Node { inputs: [], outputs: [PortIndex(9), PortIndex(10)] }, NodeIndex(8): Node { inputs: [], outputs: [] }, NodeIndex(9): Node { inputs: [PortIndex(11), PortIndex(12)], outputs: [PortIndex(13), PortIndex(14)] }, NodeIndex(10): Node { inputs: [], outputs: [] }, NodeIndex(11): Node { inputs: [], outputs: [PortIndex(15)] }, NodeIndex(12): Node { inputs: [PortIndex(16)], outputs: [PortIndex(17), PortIndex(18), PortIndex(19)] }, NodeIndex(13): Node { inputs: [], outputs: [] }}, ports: {PortIndex(0): Port { node: NodeIndex(2), direction: Outgoing }, PortIndex(1): Port { node: NodeIndex(4), direction: Incoming, link: PortIndex(18) }, PortIndex(2): Port { node: NodeIndex(4), direction: Outgoing, link: PortIndex(16) }, PortIndex(3): Port { node: NodeIndex(5), direction: Incoming, link: PortIndex(9) }, PortIndex(4): Port { node: NodeIndex(5), direction: Incoming, link: PortIndex(10) }, PortIndex(5): Port { node: NodeIndex(6), direction: Incoming, link: PortIndex(19) }, PortIndex(6): Port { node: NodeIndex(6), direction: Incoming, link: PortIndex(13) }, PortIndex(7): Port { node: NodeIndex(6), direction: Outgoing }, PortIndex(8): Port { node: NodeIndex(6), direction: Outgoing, link: PortIndex(12) }, PortIndex(9): Port { node: NodeIndex(7), direction: Outgoing, link: PortIndex(3) }, PortIndex(10): Port { node: NodeIndex(7), direction: Outgoing, link: PortIndex(4) }, PortIndex(11): Port { node: NodeIndex(9), direction: Incoming, link: PortIndex(14) }, PortIndex(12): Port { node: NodeIndex(9), direction: Incoming, link: PortIndex(8) }, PortIndex(13): Port { node: NodeIndex(9), direction: Outgoing, link: PortIndex(6) }, PortIndex(14): Port { node: NodeIndex(9), direction: Outgoing, link: PortIndex(11) }, PortIndex(15): Port { node: NodeIndex(11), direction: Outgoing }, PortIndex(16): Port { node: NodeIndex(12), direction: Incoming, link: PortIndex(2) }, PortIndex(17): Port { node: NodeIndex(12), direction: Outgoing }, PortIndex(18): Port { node: NodeIndex(12), direction: Outgoing, link: PortIndex(1) }, PortIndex(19): Port { node: NodeIndex(12), direction: Outgoing, link: PortIndex(5) }} }
